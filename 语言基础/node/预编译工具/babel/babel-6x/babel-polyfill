...由于babel默认只转换常见的语法（糖），而对于新的API都默认不处理的，
...比如：Proxy, Generator, Map, Set, Iterator, Reflect, Symbol, Promise等全局对象
...举例来说，ES6在Array对象上新增了Array.from方法。Babel就不会转码这个方法。
...如果想让这个方法运行，必须使用babel-polyfill，为当前环境提供一个垫片。

...| 安装：
$ npm install --save babel-polyfill

...| 使用：
> require("babel-polyfill");
> console.log(Proxy);

_________________________
*总结：
    以上是直接安装，并且把polyFill直接合并到项目里面的使用方法；如果是使用webpack来打包的话
    需要这样：
        $ npm install --save-dev babel-polyfill
    然后在webpack.config.js里面配置一下：
        {
            entry:["babel-ployfill","src/index.js"]
            output:...
            ...
        }
    也就是说，babel-polyfill需要当成一个js引擎的补丁使用，如果浏览器不支持新的API，就从项目自带的babel-polyfill里面读取。


